def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def cmdGetTagname = 'git describe --tags'
def cmdGetCommitNums = 'git rev-list HEAD --count'

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}
if (System.getenv("TRAVIS_BUILD_NUMBER") != null) {
    flutterVersionCode = System.getenv("TRAVIS_BUILD_NUMBER").trim().toInteger()
} else if (System.getenv("BUILD_NUMBER") != null) {
    flutterVersionCode = System.getenv("BUILD_NUMBER").trim().toInteger()
} else {
    flutterVersionCode = cmdGetCommitNums.execute().text.trim().toInteger()
}

def flutterVersionName = cmdGetTagname.execute().text.trim()

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
//firebase
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'io.fabric'
//apply plugin: 'com.google.firebase.firebase-perf'


android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "blog.home.feilong.avis"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders = ["appname": "avis-debug"]
        }
        profile {
            applicationIdSuffix ".profile"
            manifestPlaceholders = ["appname": "avis-profile"]

            minifyEnabled true
            useProguard true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            manifestPlaceholders = ["appname": "avis"]

            minifyEnabled true
            useProguard true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //forebase
//    implementation 'com.google.firebase:firebase-core:16.0.1'
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
//    implementation 'com.google.firebase:firebase-perf:16.2.5'
}
